<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
	http://www.springframework.org/schema/context  
	http://www.springframework.org/schema/context/spring-context-3.1.xsd  
	http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--处理器配置
     自动扫描该包，使SpringMVC认为包下用了
     @controller注解的类是控制器
     @service为业务-->
    <context:component-scan base-package="com.cykj"/>

    <!-- 启用默认拦截 避免静态资源被拦截 -->
    <mvc:default-servlet-handler/>
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置是自动给后面controller的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- mapping 表示对该资源的请求。注意，后面是两个星号**。
　　location 表示静态资源所在目录，在我的项目中就在webapp下创建一个static文件夹，将所有的静态资源放到这个文件夹下。 -->
<!--    <mvc:resources mapping="/static/**" location="/static/"/>-->

    <!--配置处理器映射器+  处理器适配器
     返回json  需要导入 fastjson.jar包 -->

    <mvc:annotation-driven>
<!--全局 防止中文乱码-->
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/> <!--先进行string转换 防止返回的字符串被加双引号-->

            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- PECTJ注解 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />	JSON转换器
            </list>
        </property>
    </bean> -->

    <!-- 全局错误拦截 <bean class="com.cykj.springmvc.exception.GlobalExceptionResolver"
        ></bean> -->
    <!-- 定义跳转的文件的前后缀 ，视图模式配置 -->

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/index.jsp"/>
            <mvc:exclude-mapping path="/**"/>
            <mvc:exclude-mapping path="/login.jsp"/>
            <mvc:exclude-mapping path="/userControl/login"/>
            <mvc:exclude-mapping path="/layui_demo/**"/>
            <mvc:exclude-mapping path="/userControl/reg"/>
            <mvc:exclude-mapping path="/userControl/userList"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="com.cykj.interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>